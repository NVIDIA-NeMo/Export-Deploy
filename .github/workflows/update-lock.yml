name: Update uv.lock

on:
  workflow_dispatch:  # Allow manual trigger
  push:
    paths:
      - 'pyproject.toml'
    branches:
      - 'dep_error_fix'
      - 'dep_error_fix2'

jobs:
  update-lock:
    runs-on: linux-amd64-cpu16
    container:
      image: ubuntu:24.04
    environment: nemo-ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up environment
        run: |
          apt-get update
          apt-get install -y software-properties-common wget curl git cmake
          add-apt-repository ppa:deadsnakes/ppa -y
          apt-get install -y python3.12-dev python3.12-venv
          update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1

      - name: Install CUDA
        run: |
          rm /etc/apt/sources.list.d/cuda*.list || true
          rm /etc/apt/sources.list.d/nvidia-cuda.list || true
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-keyring_1.1-1_all.deb
          dpkg -i cuda-keyring_1.1-1_all.deb
          rm cuda-keyring_1.1-1_all.deb
          apt-get update
          apt-get install -y cuda-toolkit-12-8 cudnn-cuda-12 libcudnn9-cuda-12
          apt-get clean

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/0.7.2/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"
          export CUDA_HOME=/usr/local/cuda
          export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
          export PATH=$PATH:$CUDA_HOME/bin
          export CUDACXX=/usr/local/cuda/bin/nvcc

      - name: Install pip and build dependencies globally
        run: |
          # Install pip first
          apt-get update
          apt-get install -y python3-pip
          # Install build dependencies in the system Python so uv lock can find them
          python3 -m pip install --break-system-packages setuptools torch==2.7.1 pybind11 'Cython>=3.0.0' ninja nvidia-cuda-runtime-cu12

      - name: Generate uv.lock
        run: |
          export CUDA_HOME=/usr/local/cuda
          export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
          export PATH=$HOME/.local/bin:$PATH:$CUDA_HOME/bin
          export CUDACXX=/usr/local/cuda/bin/nvcc
          export CXXFLAGS="-D_GLIBCXX_USE_CXX11_ABI=0"
          uv lock

      - name: Commit and push uv.lock
        run: |
          # Configure git safe directory
          git config --global --add safe.directory '*'
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # Check if we're in a git repo
          pwd
          ls -la
          git status
          # Add and commit the lock file
          git add uv.lock
          git commit -m "Auto-generate uv.lock with CUDA environment" || echo "No changes to commit"
          git push
