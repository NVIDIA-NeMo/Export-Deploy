[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"


[tool.setuptools]
packages = ["nemo_export", "nemo_deploy"]

[tool.setuptools.dynamic]
version = { attr = "package_info.__version__" }                 # any module attribute compatible with ast.literal_eval
readme = { file = "README.md", content-type = "text/markdown" }

[project]
name = "nemo-export-deploy"
dynamic = ["version", "readme"]
description = "NeMo Export and Deploy - a library to export and deploy LLMs and MMs"
requires-python = ">=3.10"
license = { text = "Apache 2.0" }
dependencies = [
    "nemo-toolkit[automodel,common-only,nlp-only,eval,multimodal-only,asr-only]",
    "megatron-core>=0.12.0",
    "accelerate",
    "fastapi",
    "nvidia-pytriton",
    "pydantic-settings",
    "ray",
    "ray[serve]",
    "uvicorn",
    "tensorstore<0.1.72",
    "zarr>=2.18.2,<3.0.0",
    # Lightning deps
    "cloudpickle",
    "fiddle",
    "hydra-core>1.3,<=1.3.2",
    "lightning>2.2.1,<=2.4.0",
    "omegaconf<=2.3",
    "peft",
    "torchmetrics>=0.11.0",
    "transformers",
    "wandb",
    "webdataset>=0.2.86",
]

[project.optional-dependencies]
vllm = ["vllm==0.8.5.post1", "transformers==4.51.3"]
trtllm = ["tensorrt-llm~=0.18.2"]
te = ["transformer-engine[pytorch]==2.2.0"]

[dependency-groups]
# This is a default group so that we install these even with bare `uv sync`
build = [
    # Build requirement for TE
    "torch==2.6.0",
    # Build requirement for TE
    "setuptools",
    "packaging",
    # Build requirement for nemo_run
    "hatchling",
    # Build requirement for mcore
    "pybind11",
    "Cython>=3.0.0",
]
docs = [
    "sphinx",
    "sphinx-autobuild",    # For live doc serving while editing docs
    "sphinx-autodoc2",     # For documenting Python API
    "sphinx-copybutton",   # Adds a copy button for code blocks
    "myst_parser",         # For our markdown docs
    "nvidia-sphinx-theme", # Our NVIDIA theme
]
dev = ["black~=24.3", "isort>5.1.0,<6.0.0"]
test = ["pytest", "pytest-mock", "coverage"]

[tool.uv.sources]
nemo-toolkit = { git = "https://github.com/NVIDIA/NeMo.git", rev = "259d684e73c45091f0b6144342133e6ceb7e824c" }

[tool.uv.workspace]

[tool.uv]
# Currently, TE must be built with no build-isolation b/c it requires torch
no-build-isolation-package = ["transformer-engine", "transformer-engine-torch"]
# Always apply the build group since dependencies like TE/mcore/nemo-run require build dependencies
# and this lets us assume they are implicitly installed with a simply `uv sync`. Ideally, we'd
# avoid including these in the default dependency set, but for now it's required.
default-groups = ["dev", "build", "test"]
# Users may use different link-modes depending on their scenario:
#  --link-mode=hardlink (default on linux; may get warnings about switching to --link-mode copy if uv cache and venv on different file-systems)
#  --link-mode=copy (slower but more reliable; supresses warning)
#  --link-mode=symlink (fastest option when uv cache and venv on different file-system; caveat: venv is brittle since it depends on the environment/container)
link-mode = "copy"
conflicts = [[{ extra = "trtllm" }, { extra = "vllm" }]]

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
)/
'''

[tool.pytest.ini_options]
addopts = "--durations=15 -s -rA -x"
testpaths = ["tests"]
python_files = "test_*.py"

[tool.coverage.run]
concurrency = ["thread", "multiprocessing"]
omit = ["/tmp/*", "/workspace/tests/*"]

[tool.coverage.paths]
source = ["/workspace/nemo_export/", "/workspace/nemo_deploy/"]
